//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using MySql.Data.MySqlClient;

using System.IO;
using System.Drawing;
using System.Drawing.Printing;

namespace PenjualanPembelian
{
    public class Kategori
    {
        private string kodeKategori;
        private string nama;

        #region CONSTRUCTORS
        public Kategori()
        {
            this.KodeKategori = "";
            this.Nama = "";
        }
        public Kategori(string pKode, string pNama)
        {
            this.KodeKategori = pKode;
            this.Nama = pNama;
        }
        #endregion

        #region PROPERTIES
        public string KodeKategori
            {
                get { return kodeKategori; }
                set { kodeKategori = value; }
            }

            public string Nama
            {
                get { return nama; }
                set { nama = value; }
            }
        #endregion

        #region METHODS
        public static string GenerateCode(out string hasilKode)
        {
            // Dapatkan kode kategori terakhir (terbesar)
            string sql = "SELECT MAX(KodeKategori) FROM kategori";
            hasilKode = "";

            try
            {
                MySqlDataReader hasilData = Koneksi.JalankanPerintahQuery(sql);

                if(hasilData.Read() == true)
                {
                    int kodeTerbaru = int.Parse(hasilData.GetValue(0).ToString()) + 1;

                    // Jika kode terbaru kurang dari 2 digit
                    if(kodeTerbaru < 10)
                    {
                        // tambahkan nol di depannya
                        hasilKode = "0" + kodeTerbaru.ToString();
                    }
                    else
                    {
                        hasilKode = kodeTerbaru.ToString();
                    }
                }
                else
                {
                    // jika tidak ditemukan data
                    hasilKode = "01";
                }
                return "1";
            }
            catch(Exception exc)
            {
                return exc.Message;
            }
        }

        public static string TambahData(Kategori kat)
        {
            string sql = "INSERT INTO kategori (KodeKategori, Nama) VALUES ('" + kat.KodeKategori + "', '" + kat.Nama.Replace("'", "\\'") + "')";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah SQL: " + sql;
            }
        }

        public static string UbahData(Kategori kat)
        {
            string sql = "UPDATE kategori SET Nama = '" + kat.Nama.Replace("'", "\\'") + "' WHERE KodeKategori = '" + kat.KodeKategori + "'";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string HapusData(Kategori kat)
        {
            string sql = "DELETE FROM Kategori WHERE KodeKategori = '" + kat.KodeKategori + "'";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch(MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string BacaData(string kriteria, string nilaiKriteria, List<Kategori> listHasilData)
        {
            string sql = "";

            // JIka tidak ada kriteria yang diisikan
            if (kriteria == "")
            {
                sql = "SELECT * FROM Kategori";
            }
            else
            {
                sql = "SELECT * FROM Kategori WHERE " + kriteria + " LIKE '%" + nilaiKriteria + "%'";
            }

            try
            {
                MySqlDataReader hasilData = Koneksi.JalankanPerintahQuery(sql);

                while (hasilData.Read() == true) // selama masih ada data atau selama masih bisa membaca data
                {
                    // Baca hasil dari MySqlDataReader dan simpan di objek
                    Kategori kt = new Kategori();
                    kt.KodeKategori = hasilData.GetValue(0).ToString();
                    kt.Nama = hasilData.GetValue(1).ToString();

                    // Simpan ke list
                    listHasilData.Add(kt);
                }

                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string CetakNota(string pKriteria, string pNilaiKriteria, string pNamaFile)
        {
            try
            {
                List<Kategori> listKategori = new List<Kategori>();

                // baca data nota tertentu yang akan dicetak
                string hasilBaca = Kategori.BacaData(pKriteria, pNilaiKriteria, listKategori);

                // simpan dulu isi nota yang akan ditampilkan ke objek file (StreamWrite)
                StreamWriter file = new StreamWriter(pNamaFile);

                // tampilkan info perusahaan
                file.WriteLine("Laporan Per Tanggal : " + DateTime.Now.ToShortDateString());
                file.WriteLine("");
                file.WriteLine("TOKO MAJU MAKMUR UNTUNG SELALU");
                file.WriteLine("Jl. Raya Kalirungkut Surabaya");
                file.WriteLine("Telp. (031) - 12345678");
                file.WriteLine("**".PadRight(50, '*'));
                file.WriteLine("");

                for (int i = 0; i < listKategori.Count; i++)
                {
                    // tampilkan header nota
                    file.WriteLine("Kode Kategori : " + listKategori[i].KodeKategori);
                    file.WriteLine("Nama : " + listKategori[i].Nama);
                    file.WriteLine("=".PadRight(50, '='));
                }
                file.Close();

                // cetak ke printer
                Cetak c = new Cetak(pNamaFile, "Courier New", 9, 10, 10, 10, 10);
                c.CetakKePrinter("tulisan");
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message;
            }
        }
        #endregion
    }
}

