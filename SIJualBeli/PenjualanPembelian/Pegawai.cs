//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool
//     Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

using MySql.Data.MySqlClient;

using System.IO;
using System.Drawing;
using System.Drawing.Printing;

namespace PenjualanPembelian
{

    public class Pegawai
    {
        private int kodePegawai;
        private string nama;
        private string username;
        private string password;
        private DateTime tglLahir;
        private string alamat;
        private int gaji;
        private Jabatan jabatan;

        #region PROPERTIES
        public int KodePegawai
        {
            get { return kodePegawai; }
            set { kodePegawai = value; }
        }
        
        public string Nama
        {
            get { return nama; }
            set { nama = value; }
        }
       
        public string Username
        {
            get { return username; }
            set { username = value; }
        }
        
        public string Password
        {
            get { return password; }
            set { password = value; }
        }
        
        public DateTime TglLahir
        {
            get { return tglLahir; }
            set { tglLahir = value; }
        }
        
        public string Alamat
        {
            get { return alamat; }
            set { alamat = value; }
        }
        
        public int Gaji
        {
            get { return gaji; }
            set { gaji = value; }
        }
       
        public Jabatan Jabatan
        {
            get { return jabatan; }
            set { jabatan = value; }
        }
        #endregion

        #region CONSTRUCTORS
        public Pegawai()
        {
            this.KodePegawai = 0;
            this.Nama = "";
            this.Username = "";
            this.Password = "";
            this.TglLahir = DateTime.Now;
            this.Alamat = "";
            this.Gaji = 0;
        }
        public Pegawai(int pKodePegawai, string pNama, string pUsername, string pPassword, DateTime pTglLahir, string pAlamat, int pGaji, Jabatan pJabatan)
        {
            this.KodePegawai = pKodePegawai;
            this.Nama = pNama;
            this.Username = pUsername;
            this.Password = pPassword;
            this.TglLahir = pTglLahir;
            this.Alamat = pAlamat;
            this.Gaji = pGaji;
            this.Jabatan = pJabatan;
        }
        #endregion

        #region METHODS
        public static string GenerateCode(out string pHasilId)
        {
            string sql = "SELECT COUNT(*) FROM pegawai";
            pHasilId = "";

            try
            {
                MySqlDataReader hasilData = Koneksi.JalankanPerintahQuery(sql);

                if (hasilData.Read() == true)
                {
                    if (hasilData.GetValue(0).ToString() != "")
                    {
                        int idTerbaru = int.Parse(hasilData.GetValue(0).ToString()) + 1;

                        pHasilId = idTerbaru.ToString();
                    }
                    else
                    {
                        // Jika tidak ditemukan data dengan kategori tertentu maka kode terbaru = "J1"
                        pHasilId = "1";
                    }
                }
                return "1";
            }
            catch (Exception exc)
            {
                return exc.Message;
            }
        }

        public static string BacaData(string kriteria, string nilaiKriteria, List<Pegawai> listHasilData)
        {
            string sql = "";
            if (kriteria == "")
            {
                sql = "SELECT P.KodePegawai, P.Nama, P.TglLahir, P.Alamat, P.Gaji, P.Username, P.Password, J.IdJabatan, J.Nama AS NamaJabatan" +
                      " FROM pegawai P INNER JOIN jabatan J ON P.IdJabatan = J.IdJabatan";
            }
            else
            {
                sql = "SELECT P.KodePegawai, P.Nama, P.TglLahir, P.Alamat, P.Gaji, P.Username, P.Password, J.IdJabatan, J.Nama AS NamaJabatan" +
                      " FROM pegawai P INNER JOIN jabatan J ON P.IdJabatan = J.IdJabatan" +
                      " WHERE " + kriteria + " LIKE '%" + nilaiKriteria + "%'";
            }

            try
            {
                MySqlDataReader hasilData = Koneksi.JalankanPerintahQuery(sql);
                listHasilData.Clear();
                while (hasilData.Read() == true)
                {
                    Pegawai p = new Pegawai();
                    p.KodePegawai = int.Parse(hasilData.GetValue(0).ToString());
                    p.Nama = hasilData.GetValue(1).ToString();
                    p.TglLahir = DateTime.Parse(hasilData.GetValue(2).ToString());
                    p.Alamat = hasilData.GetValue(3).ToString();
                    p.Gaji = int.Parse(hasilData.GetValue(4).ToString());
                    p.Username = hasilData.GetValue(5).ToString();
                    p.Password = hasilData.GetValue(6).ToString();
                   
                    Jabatan jabatan = new Jabatan(hasilData.GetValue(7).ToString(), hasilData.GetValue(8).ToString());
                    p.Jabatan = jabatan;

                    listHasilData.Add(p);
                }
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string TambahData(Pegawai pPegawai)
        {
            string sql = "INSERT INTO pegawai VALUES ('" +
                              pPegawai.KodePegawai + "','" +
                              pPegawai.Nama.Replace("'", "\\'") + "','" +
                              pPegawai.TglLahir.ToString("yyyy-MM-dd") + "','" +
                              pPegawai.Alamat + "','" +
                              pPegawai.Gaji + "','" +
                              pPegawai.Username +  "','" +
                              pPegawai.Password + "','" +
                              pPegawai.Jabatan.IdJabatan + "')";

            try
            {
                Koneksi.JalankanPerintahDML(sql);

                string namaServer = Koneksi.GetNamaServer();
                string namaDatabase = Koneksi.GetNamaDatabase();

                string hasilBuatUser = Pegawai.BuatUserBaru(pPegawai, namaServer);

                if (hasilBuatUser != "1")
                {
                    return "Gagal membuat user baru. Pesan kesalahan: " + hasilBuatUser;
                }
                else
                {
                    string hasilHakAkses = Pegawai.BeriHakAkses(pPegawai, namaServer, namaDatabase);

                    if (hasilHakAkses != "1")
                    {
                        return "Gagal memberikan hak akses user baru. Pesan kesalahan: " + hasilHakAkses;
                    }
                    else
                    {
                        return "1";
                    }
                }
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql: " + sql;
            }
        }

        public static string UbahData(Pegawai pPegawai)
        {
            string sql = "UPDATE pegawai SET Nama = '" + pPegawai.Nama.Replace("'", "\\'") +
                         "', TglLahir = '" + pPegawai.TglLahir.ToString("yyyy-MM-dd") +
                         "', Alamat = '" + pPegawai.Alamat +
                         "', Gaji = '" + pPegawai.Gaji +
                         //"', Username = '" + pPegawai.Username +
                         "', Password = '" + pPegawai.Password +
                         "', IdJabatan = '" + pPegawai.Jabatan.IdJabatan +
                         "' WHERE KodePegawai = '" + pPegawai.KodePegawai + "'";

            string namaServer = Koneksi.GetNamaServer();

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                string hasilUbahPassword = UbahPasswordUser(pPegawai, namaServer);

                if(hasilUbahPassword == "1")
                {
                    return "1";
                }
                else
                {
                    return "Gagal mengubah password user. Pesan kesalahan: " + hasilUbahPassword;
                }
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string HapusData(Pegawai pPegawai)
        {
            string sql = "DELETE FROM pegawai WHERE KodePegawai = '" + pPegawai.KodePegawai + "'";

            string namaServer = Koneksi.GetNamaServer();

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                string hasilHapusUser = HapusUser(pPegawai, namaServer);

                if(hasilHapusUser == "1")
                {
                    return "1";
                }
                else
                {
                    return "Gagal menghapus user. Pesan kesalahan: " + hasilHapusUser;
                }
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql: " + sql;
            }
        }

        public static string BuatUserBaru(Pegawai pPegawai, string pNamaServer)
        {
            string sql = "CREATE USER '" + pPegawai.Username + "'@'" + pNamaServer + "' IDENTIFIED BY '" + pPegawai.Password + "'";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string BeriHakAkses(Pegawai pPegawai, string pNamaServer, string pNamaDatabase)
        {
            string sql = "GRANT ALL PRIVILEGES ON " + pNamaDatabase + ".* TO '" + pPegawai.Username + "'@'" + pNamaServer + "'";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string UbahPasswordUser(Pegawai pPegawai, string pNamaServer)
        {
            string sql = "SET PASSWORD FOR '" + pPegawai.Username + "'@'" + pNamaServer + "'=PASSWORD('" + pPegawai.Password + "')";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string HapusUser(Pegawai pPegawai, string pNamaServer)
        {
            string sql = "DROP USER '" + pPegawai.Nama + "'@'" + pNamaServer + "'";

            try
            {
                Koneksi.JalankanPerintahDML(sql);
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message + ". Perintah sql : " + sql;
            }
        }

        public static string CetakNota(string pKriteria, string pNilaiKriteria, string pNamaFile)
        {
            try
            {
                List<Pegawai> listPegawai = new List<Pegawai>();

                // baca data nota tertentu yang akan dicetak
                string hasilBaca = Pegawai.BacaData(pKriteria, pNilaiKriteria, listPegawai);

                // simpan dulu isi nota yang akan ditampilkan ke objek file (StreamWrite)
                StreamWriter file = new StreamWriter(pNamaFile);

                // tampilkan info perusahaan
                file.WriteLine("Laporan Per Tanggal : " + DateTime.Now.ToShortDateString());
                file.WriteLine("");
                file.WriteLine("TOKO MAJU MAKMUR UNTUNG SELALU");
                file.WriteLine("Jl. Raya Kalirungkut Surabaya");
                file.WriteLine("Telp. (031) - 12345678");
                file.WriteLine("**".PadRight(50, '*'));
                file.WriteLine("");

                for (int i = 0; i < listPegawai.Count; i++)
                {
                    // tampilkan header nota
                    file.WriteLine("Kode Pegawai : " + listPegawai[i].KodePegawai);
                    file.WriteLine("Nama : " + listPegawai[i].Nama);
                    file.WriteLine("Tanggal Lahir : " + listPegawai[i].TglLahir);
                    file.WriteLine("Alamat : " + listPegawai[i].Alamat);
                    file.WriteLine("Gaji : " + listPegawai[i].Gaji);
                    file.WriteLine("Username : " + listPegawai[i].Username);
                    file.WriteLine("=".PadRight(50, '='));
                }
                file.Close();

                // cetak ke printer
                Cetak c = new Cetak(pNamaFile, "Courier New", 9, 10, 10, 10, 10);
                c.CetakKePrinter("tulisan");
                return "1";
            }
            catch (MySqlException exc)
            {
                return exc.Message;
            }
        }
        #endregion
    }
}